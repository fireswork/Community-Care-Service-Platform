<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.server.repository.UserMapper">
    <resultMap id="BaseResultMap" type="com.community.server.model.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="name" property="name"/>
        <result column="phone" property="phone"/>
        <result column="role" property="role"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, username, password, name, phone, role, create_time, update_time
    </sql>

    <select id="findById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE id = #{id}
    </select>

    <select id="findByUsername" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE username = #{username}
    </select>

    <select id="findAllUsers" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM user
        WHERE role = 'USER'
        ORDER BY create_time DESC
    </select>

    <insert id="insert" parameterType="com.community.server.model.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (
            username, password, name, phone, role, create_time, update_time
        ) VALUES (
            #{username}, #{password}, #{name}, #{phone}, #{role}, NOW(), NOW()
        )
    </insert>

    <update id="update" parameterType="com.community.server.model.User">
        UPDATE user
        <set>
            <if test="password != null">password = #{password},</if>
            <if test="name != null">name = #{name},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="role != null">role = #{role},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM user WHERE id = #{id} AND role = 'USER'
    </delete>
</mapper> 